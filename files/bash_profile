if [ -e "$HOME/.bash_profile.before" ]
then
  source "$HOME/.bash_profile.before"
fi

# /usr/local/bin prioritized over /usr/bin in $PATH
PATH=/usr/local/bin:$PATH

# mvim
export EDITOR=/usr/local/bin/mvim
export VISUAL=/usr/local/bin/mvim
export GIT_EDITOR="/usr/local/bin/mvim -f"

# git stuff from
# http://0xfe.blogspot.com/2010/04/adding-git-status-information-to-your.html

# Returns "*" if the current git branch is dirty.
function parse_git_dirty {
  [[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]] && echo "*"
}

# Returns "|shashed:N" where N is the number of stashed states (if any).
function parse_git_stash {
  local stash=`expr $(git stash list 2>/dev/null| wc -l)`
  if [ "$stash" != "0" ]
  then
    echo "|stashed:$stash"
  fi
}

# Get the current git branch name (if available)
git_prompt() {
  local ref=$(git symbolic-ref HEAD 2>/dev/null | cut -d'/' -f3)
  if [ "$ref" != "" ]
  then
    echo "($ref$(parse_git_dirty))"
  fi
}

# git command-line prompt
source /usr/local/etc/bash_completion.d/git-completion.bash
source /usr/local/etc/bash_completion.d/git-prompt.sh
PS1='[\W$(__git_ps1 " $(git_prompt)")]\$ '

# bundler aliases
alias be="bundle exec"

history_grep_tail() {
  history | grep $1 | tail
}

alias hgt="history_grep_tail"

# docker-compose aliases
alias dc="docker-compose"
alias dcu="docker-compose up"
alias dcud="docker-compose up --detach"
alias dcl="docker-compose logs --tail=25 -f"
alias dcps="docker-compose ps"
alias dcs="docker-compose stop"

# git aliases
alias ga="git add"
__git_complete ga _git_add

alias gbl="git blame"
alias gbr="git branch"
__git_complete gbr _git_branch

alias gc="git commit -a"
alias gch="git checkout"
__git_complete gch _git_checkout
alias gcb="git checkout -b"
alias gcm="git commit -a -m"
alias gcp="git cherry-pick"
alias gcw="git commit -a -m 'WIP'"

alias gd="git diff"
__git_complete gd _git_diff
alias gdm="git for-each-ref --format '%(refname:short)' --merged master refs/heads|grep -v master|xargs git branch -d"

alias gfo="git fetch origin"

alias gg="git grep"
__git_complete gg _git_grep

alias gl="git log"
__git_complete gl _git_log
alias glo="git log --date=short --pretty=format:\"%cd | %h | %s\""
__git_complete glo _git_log
alias gloh='function _gloh() { git log --date=short --pretty=format:"%cd | %h | %s" $1 |head; }; _gloh'
__git_complete gloh _git_log

alias gm="git mv"

alias gpo="git push origin"
__git_complete gpo _git_push
alias gpom="git push origin master"
alias gpr="git pull --rebase"

alias gre="git reset"
__git_complete gre _git_reset
alias greh="git reset HEAD"
__git_complete greh _git_reset

_grom_helper() {
    if git show-ref --quiet refs/remotes/origin/main; then
        git rebase origin/main "$@";
    elif git show-ref --quiet refs/remotes/origin/master; then
        git rebase origin/master "$@";
    else
        echo "Neither origin/main nor origin/master exists";
    fi;
}
alias grom='_grom_helper'

alias grm="git rm"
__git_complete grm _git_rm

alias gs="git status"
__git_complete gs _git_status
alias gsh="git stash"
__git_complete gsh _git_stash

# migreazy branch autocompleting
__git_complete "migreazy down" _git_branch

# rails aliases
alias rc="be rails console"
alias rdm="be rake db:migrate"
alias rg="be rails generate"
alias rs="be rails server"
alias devlog="tail -f log/development.log"

# Increase history
export HISTFILESIZE=1000000
export HISTSIZE=1000000

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

if [ -e "$HOME/.bash_profile.auth" ]
then
  source "$HOME/.bash_profile.auth"
fi

if [ -e "$HOME/.bash_profile.after" ]
then
  source "$HOME/.bash_profile.after"
fi

